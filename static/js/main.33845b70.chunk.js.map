{"version":3,"sources":["apiStorage.js","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/phonebookApp/App.styled.jsx","components/phonebookApp/App.jsx","index.js"],"names":["apiStorage","key","value","localStorage","setItem","JSON","stringify","data","getItem","parse","MyCard","styled","div","Card","children","Form","form","Label","label","Input","input","LabelName","span","AddButton","button","ContactForm","onSubmit","reset","e","target","name","number","preventDefault","type","pattern","title","required","Contact","li","Text","DeleteButton","ContactItem","onDeleteContact","contact","id","onClick","ListContact","ul","ContactList","contacts","map","FilterTitle","h3","FilterInput","filter","Filter","handleChange","onChange","Container","Section","Title","h1","App","useState","setContacts","setFilter","useEffect","nameVerification","find","filteredContacts","toLowerCase","includes","toast","error","style","border","padding","color","iconTheme","primary","secondary","newContact","uuidv4","prev","newContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33845b70.chunk.js","sourcesContent":["const setDataStorage = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\nconst getDataStorage = key => {\n  const data = localStorage.getItem(`${key}`);\n  const parsedData = JSON.parse(data);\n  return parsedData;\n};\n\nexport const apiStorage = { setDataStorage, getDataStorage };\n","import styled from '@emotion/styled';\n\nexport const MyCard = styled.div`\n  margin: 0 auto;\n  width: 500px;\n  padding: 20px 50px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n`;\n","import { MyCard } from './Card.styled';\n\nexport default function Card({ children }) {\n  return <MyCard>{children}</MyCard>;\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 1.167;\n  letter-spacing: 0.01em;\n  color: #757575;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  padding-left: 20px;\n  margin-bottom: 20px;\n  width: 100%;\n  height: 40px;\n\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus {\n    outline: none;\n    border: 2px solid #2196f3;\n  }\n`;\n\nexport const LabelName = styled.span`\n  margin-bottom: 8px;\n`;\n\nexport const AddButton = styled.button`\n  width: 160px;\n  height: 40px;\n  margin: 0 auto;\n  font-size: 18px;\n  line-height: 1.167;\n  letter-spacing: 0.01em;\n  color: #757575;\n  background: #e5e3e9;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n\n  &:hover {\n    background: #188ce8;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    color: #fff;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Form, Label, Input, LabelName, AddButton } from './ContactForm.styled';\n\nexport default function ContactForm({ onSubmit }) {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n\n    onSubmit(name, number);\n    reset(e);\n  };\n\n  const reset = e => {\n    e.target.name.value = '';\n    e.target.number.value = '';\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <LabelName>Name</LabelName>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        <LabelName>Number</LabelName>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <AddButton type=\"submit\">Add contact</AddButton>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 1.167;\n  letter-spacing: 0.01em;\n  color: #272727;\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const Text = styled.span`\n  margin-right: 10px;\n`;\n\nexport const DeleteButton = styled.button`\n  padding: 8px 10px;\n  background: #e5e3e9;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: 0.03em;\n\n  &:hover {\n    background: #e96161;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    color: #fff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Contact, Text, DeleteButton } from './ContactItem.styled';\n\nexport default function ContactItem({\n  onDeleteContact,\n  contact: { name, number, id },\n}) {\n  return (\n    <Contact>\n      <Text>\n        - {name}: {number}\n      </Text>\n      <DeleteButton type=\"button\" onClick={() => onDeleteContact(id)}>\n        X\n      </DeleteButton>\n    </Contact>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ListContact = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding-left: 20px;\n  padding-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem';\n\nimport { ListContact } from './ContactList.styled';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ListContact>\n      {contacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ListContact>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FilterTitle = styled.h3`\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 20px;\n  letter-spacing: 0.03em;\n  color: #757575;\n`;\n\nexport const FilterInput = styled.input`\n  margin-bottom: 24px;\n  padding: 4px 0px 4px 10px;\n  width: 80%;\n  border-radius: 4px;\n  border: 2px solid ${({ filter }) => (filter ? '#2196f3;' : '#89888ba6')};\n  outline: none;\n\n  &:focus {\n    border: 2px solid #2196f3;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { FilterTitle, FilterInput } from './Filter.styled';\n\nexport default function Filter({ filter, handleChange }) {\n  return (\n    <div>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <FilterInput\n        filter={filter}\n        type=\"text\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n  text-align: center;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 28px;\n  letter-spacing: 0.03em;\n  padding-bottom: 6px;\n  border-bottom: 1px solid #757575;\n`;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { apiStorage } from '../../apiStorage.js';\n\nimport Card from '../Card';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\n\nimport { Container, Section, Title } from './App.styled';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    () => apiStorage.getDataStorage('contacts') ?? [],\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    apiStorage.setDataStorage('contacts', contacts);\n  }, [contacts]);\n\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const handleSubmit = (name, number) => {\n    if (nameVerification(name)) {\n      toast.error(`${name} is already in contacts`, {\n        style: {\n          border: '1px solid #713200',\n          padding: '16px',\n          color: '#713200',\n        },\n        iconTheme: {\n          primary: '#713200',\n          secondary: '#FFFAEE',\n        },\n      });\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    setContacts(prev => [...prev, newContact]);\n  };\n\n  const nameVerification = name => {\n    return contacts.find(contact => name === contact.name);\n  };\n\n  const deleteContact = id => {\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    setContacts(newContacts);\n  };\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return (\n    <Card>\n      <Container>\n        <Section>\n          <Title>Phonebook</Title>\n          <ContactForm onSubmit={handleSubmit} />\n        </Section>\n        <Section>\n          <Title>Contacts</Title>\n          <Filter filter={filter} handleChange={handleFilterChange} />\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={deleteContact}\n          />\n        </Section>\n        <Toaster />\n      </Container>\n    </Card>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/phonebookApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}